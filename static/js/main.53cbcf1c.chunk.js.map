{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/CardDetail.js","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","CardDetail","cardText","cardValue","cardDescription","lastUpdate","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","cards","infected","value","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchedAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53cbcf1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import {CardContent, Typography} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport React from \"react\";\n\nconst CardDetail = ({cardText, cardValue, cardDescription, lastUpdate}) => {\n    return (\n        <CardContent>\n            <Typography color=\"text\" gutterBottom>{cardText}</Typography>\n            <Typography variant=\"h5\">\n                <CountUp\n                    start={0}\n                    end={cardValue}\n                    duration={2.5}\n                    separator=\",\"\n                />\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">{cardDescription}</Typography>\n        </CardContent>\n    );\n}\n\nexport default CardDetail;","import React from 'react';\nimport {Card, Grid} from \"@material-ui/core\";\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\nimport CardDetail from './CardDetail';\n\nconst Cards = ( {data: {confirmed, recovered, deaths, lastUpdate}} ) => {\n    if(!confirmed) {\n        return 'Loading..';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.cards, styles.infected)}>\n                    <CardDetail cardText=\"Infected\"\n                                cardValue={confirmed.value}\n                                cardDescription=\"Number of active cases of COVID-19\"\n                                lastUpdate={lastUpdate}/>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.cards, styles.recovered)}>\n                    <CardDetail cardText=\"Recovered\"\n                                cardValue={recovered.value}\n                                cardDescription=\"Number of recoveries from COVID-19\"\n                                lastUpdate={lastUpdate}/>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.cards, styles.deaths)}>\n                    <CardDetail cardText=\"Deaths\"\n                                cardValue={deaths.value}\n                                cardDescription=\"Number of deaths caused by COVID-19\"\n                                lastUpdate={lastUpdate}/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Cards;","import axios from \"axios\";\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const { data } = await axios.get(changeableUrl);\n        const modifiedData = {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate\n        }\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map(dailyData => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: {countries} } = await axios.get(`${url}/countries`);\n        return countries.map(country => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, {useState, useEffect} from \"react\";\nimport { fetchDailyData} from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchedAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchedAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line data={{\n                labels: dailyData.map(({date}) => date),\n                datasets: [{\n                    data: dailyData.map(({confirmed}) => confirmed)  ,\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true\n                }, {\n                    data: dailyData.map(({deaths}) => deaths)  ,\n                    label: 'Deaths',\n                    borderColor: 'rgba(255,0,0,0.5)',\n                    fill: true\n                }]\n            }}/>\n            ) : null\n    );\n\n    const barChart = (\n        data.confirmed ? (\n            <Bar data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: [\n                        'rgba(0, 0, 255, 0.5)',\n                        'rgba(0, 255, 0, 0.5)',\n                        'rgba(255, 0, 0, 0.5)'\n                    ],\n                    data:[data.confirmed.value, data.recovered.value, data.deaths.value]\n                }]\n            }}\n            options={{\n                legend: {display: false},\n                title: {display: true, text: `Current state in ${country}`}\n            }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    );\n}\n\nexport default Chart;","import React, {useState, useEffect} from \"react\";\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const[countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n}\n\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\nimport styles from './App.module.css';\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport { fetchData } from \"./api\";\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n    //const api_key = process.env.REACT_APP_KEY;\n\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country});\n    }\n\n    render() {\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}